<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tudou.base.repository.UserMapper">
    <resultMap id="BaseResultMap" type="com.tudou.base.model.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="salt" jdbcType="VARCHAR" property="salt" />
        <result column="realname" jdbcType="VARCHAR" property="realname" />
        <result column="avatar" jdbcType="VARCHAR" property="avatar" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="sex" jdbcType="TINYINT" property="sex" />
        <result column="locked" jdbcType="TINYINT" property="locked" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="create_id" jdbcType="BIGINT" property="createId" />
        <result column="modify_time" jdbcType="BIGINT" property="modifyTime" />
        <result column="modify_id" jdbcType="BIGINT" property="modifyId" />
    </resultMap>
    <resultMap id="BaseResultMap_Alias" type="com.tudou.base.model.User">
        <id column="base_user_id" jdbcType="BIGINT" property="id" />
        <result column="base_user_username" jdbcType="VARCHAR" property="username" />
        <result column="base_user_password" jdbcType="VARCHAR" property="password" />
        <result column="base_user_salt" jdbcType="VARCHAR" property="salt" />
        <result column="base_user_realname" jdbcType="VARCHAR" property="realname" />
        <result column="base_user_avatar" jdbcType="VARCHAR" property="avatar" />
        <result column="base_user_phone" jdbcType="VARCHAR" property="phone" />
        <result column="base_user_email" jdbcType="VARCHAR" property="email" />
        <result column="base_user_sex" jdbcType="TINYINT" property="sex" />
        <result column="base_user_locked" jdbcType="TINYINT" property="locked" />
        <result column="base_user_create_time" jdbcType="BIGINT" property="createTime" />
        <result column="base_user_create_id" jdbcType="BIGINT" property="createId" />
        <result column="base_user_modify_time" jdbcType="BIGINT" property="modifyTime" />
        <result column="base_user_modify_id" jdbcType="BIGINT" property="modifyId" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `id`, `username`, `password`, `salt`, `realname`, `avatar`, `phone`, 
        `email`, `sex`, `locked`, `create_time`, `create_id`, `modify_time`, 
        `modify_id`
    </sql>
    <sql id="Base_Column_List_Alias">
        `base_user`.`id` as `base_user_id`, `base_user`.`username` as `base_user_username`, 
        `base_user`.`password` as `base_user_password`, `base_user`.`salt` as `base_user_salt`, 
        `base_user`.`realname` as `base_user_realname`, `base_user`.`avatar` as `base_user_avatar`, 
        `base_user`.`phone` as `base_user_phone`, `base_user`.`email` as `base_user_email`, 
        `base_user`.`sex` as `base_user_sex`, `base_user`.`locked` as `base_user_locked`, 
        `base_user`.`create_time` as `base_user_create_time`, `base_user`.`create_id` as `base_user_create_id`, 
        `base_user`.`modify_time` as `base_user_modify_time`, `base_user`.`modify_id` as `base_user_modify_id`
    </sql>
    <select id="selectByExample" parameterType="com.tudou.base.model.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from `base_user`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from `base_user`
        where `id` = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from `base_user`
        where `id` = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.tudou.base.model.UserExample">
        delete from `base_user`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tudou.base.model.User" useGeneratedKeys="true">
        insert into `base_user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="username != null">
                `username`,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="salt != null">
                `salt`,
            </if>
            <if test="realname != null">
                `realname`,
            </if>
            <if test="avatar != null">
                `avatar`,
            </if>
            <if test="phone != null">
                `phone`,
            </if>
            <if test="email != null">
                `email`,
            </if>
            <if test="sex != null">
                `sex`,
            </if>
            <if test="locked != null">
                `locked`,
            </if>
            <if test="createTime != null">
                `create_time`,
            </if>
            <if test="createId != null">
                `create_id`,
            </if>
            <if test="modifyTime != null">
                `modify_time`,
            </if>
            <if test="modifyId != null">
                `modify_id`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=BIGINT},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=BIGINT},
            </if>
            <if test="modifyId != null">
                #{modifyId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.tudou.base.model.UserExample" resultType="java.lang.Integer">
        select count(*) from `base_user`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `base_user`
        <set>
            <if test="record.id != null">
                `id` = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.username != null">
                `username` = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                `password` = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.salt != null">
                `salt` = #{record.salt,jdbcType=VARCHAR},
            </if>
            <if test="record.realname != null">
                `realname` = #{record.realname,jdbcType=VARCHAR},
            </if>
            <if test="record.avatar != null">
                `avatar` = #{record.avatar,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                `phone` = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                `email` = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                `sex` = #{record.sex,jdbcType=TINYINT},
            </if>
            <if test="record.locked != null">
                `locked` = #{record.locked,jdbcType=TINYINT},
            </if>
            <if test="record.createTime != null">
                `create_time` = #{record.createTime,jdbcType=BIGINT},
            </if>
            <if test="record.createId != null">
                `create_id` = #{record.createId,jdbcType=BIGINT},
            </if>
            <if test="record.modifyTime != null">
                `modify_time` = #{record.modifyTime,jdbcType=BIGINT},
            </if>
            <if test="record.modifyId != null">
                `modify_id` = #{record.modifyId,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.tudou.base.model.User">
        update `base_user`
        <set>
            <if test="username != null">
                `username` = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                `salt` = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                `realname` = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                `avatar` = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                `phone` = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                `email` = #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                `sex` = #{sex,jdbcType=TINYINT},
            </if>
            <if test="locked != null">
                `locked` = #{locked,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="createId != null">
                `create_id` = #{createId,jdbcType=BIGINT},
            </if>
            <if test="modifyTime != null">
                `modify_time` = #{modifyTime,jdbcType=BIGINT},
            </if>
            <if test="modifyId != null">
                `modify_id` = #{modifyId,jdbcType=BIGINT},
            </if>
        </set>
        where `id` = #{id,jdbcType=BIGINT}
    </update>
</mapper>